bmsce@bmsce-OptiPlex-3060:~$ spark-shell
22/06/28 10:43:31 WARN Utils: Your hostname, bmsce-OptiPlex-3060 resolves to a loopback address: 127.0.1.1; using 10.124.7.99 instead (on interface enp1s0)
22/06/28 10:43:31 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address
22/06/28 10:43:31 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
Spark context Web UI available at http://10.124.7.99:4040
Spark context available as 'sc' (master = local[*], app id = local-1656393214490).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.4.8
      /_/
         
Using Scala version 2.11.12 (OpenJDK 64-Bit Server VM, Java 1.8.0_312)
Type in expressions to have them evaluated.
Type :help for more information.

scala> val textFile = sc.textFile("sparkdata.txt")
textFile: org.apache.spark.rdd.RDD[String] = sparkdata.txt MapPartitionsRDD[1] at textFile at <console>:24

scala> val counts = textFile.flatMap(line => line.split(" ")).map(word => (word, 1)).reduceByKey(_ + _)
counts: org.apache.spark.rdd.RDD[(String, Int)] = ShuffledRDD[4] at reduceByKey at <console>:25

scala> import scala.collection.immutable.ListMap
import scala.collection.immutable.ListMap

scala> val sorted=ListMap(counts.collect.sortWith(_._2 > _._2):_*)// sort in descending order based on values
sorted: scala.collection.immutable.ListMap[String,Int] = Map(is -> 5, Scala -> 5, and -> 3, the -> 2, created -> 1, beginner -> 1, object-oriented -> 1, enough -> 1, learn. -> 1, Java -> 1, language -> 1, been -> 1, first -> 1, integrates -> 1, easy -> 1, version -> 1, has -> 1, smoothly -> 1, languages. -> 1, it -> 1, a -> 1, on -> 1, multi-paradigm -> 1, features -> 1, to -> 1, he -> 1, in -> 1, friendly -> 1, of -> 1, released -> 1, by -> 1, Odersky -> 1, based -> 1, programming -> 1, 2003. -> 1, Martin -> 1, functional -> 1, Programming -> 1, modern -> 1)

scala> println(sorted)
Map(is -> 5, Scala -> 5, and -> 3, the -> 2, created -> 1, beginner -> 1, object-oriented -> 1, enough -> 1, learn. -> 1, Java -> 1, language -> 1, been -> 1, first -> 1, integrates -> 1, easy -> 1, version -> 1, has -> 1, smoothly -> 1, languages. -> 1, it -> 1, a -> 1, on -> 1, multi-paradigm -> 1, features -> 1, to -> 1, he -> 1, in -> 1, friendly -> 1, of -> 1, released -> 1, by -> 1, Odersky -> 1, based -> 1, programming -> 1, 2003. -> 1, Martin -> 1, functional -> 1, Programming -> 1, modern -> 1)

scala> for((k,v)<-sorted)
     | {
     |   if(v>4)
     |     {
     |      print(k+",")
     |        print(v)
     |        println()
     |      }
     | }
is,5
Scala,5
